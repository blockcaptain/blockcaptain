name: CI

on:
  push:
    branches: [master]

jobs:
  clippy:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Cache crates
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-crates-${{ hashFiles('./Cargo.lock') }}
      - name: Setup Environment
        run: eng/ci/setup.sh
      - name: Run Clippy
        run: eng/ci/clippy.sh
  build:
    runs-on: ubuntu-20.04
    env:
      CARGO_CARGO_DEB_VERSION: 1.28.2
    steps:
      - uses: actions/checkout@v2
      - name: Cache cargo-deb
        uses: actions/cache@v2
        with:
          path: ~/.cargo/bin/cargo-deb
          key: ${{ runner.os }}-cargo-cargo-deb-${{ env.CARGO_CARGO_DEB_VERSION }}
      - name: Cache crates
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-crates-${{ hashFiles('./Cargo.lock') }}
      - name: Setup Environment
        run: eng/ci/setup.sh
      - name: Setup Build Environment
        run: eng/ci/setup-build.sh
      - name: Run Build
        run: eng/ci/build.sh
      - name: Upload Build
        uses: actions/upload-artifact@v2
        with:
          name: ubuntu-deb
          path: target/debian/blockcaptain_*.deb
  integrationtest:
    runs-on: ubuntu-20.04
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Setup Environment
        run: eng/ci/setup-integration.sh
      - name: Download Build
        uses: actions/download-artifact@v2
        with:
          name: ubuntu-deb
          path: target/debian
      - name: Run Integration Test
        run: eng/ci/integration-run.sh
      - name: Upload Logs
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: integration-logs
          path: "*.log.json"
  unittest:
    runs-on: ubuntu-20.04
    env:
      CARGO_CARGO_TARPAULIN_VERSION: 0.16.0
      CARGO_CARGO2JUNIT_VERSION: 0.1.6
    steps:
      - uses: actions/checkout@v2
      - name: Cache cargo-tarpaulin
        uses: actions/cache@v2
        with:
          path: ~/.cargo/bin/cargo-tarpaulin
          key: ${{ runner.os }}-cargo-cargo-tarpaulin-${{ env.CARGO_CARGO_TARPAULIN_VERSION }}
      - name: Cache cargo2junit
        uses: actions/cache@v2
        with:
          path: ~/.cargo/bin/cargo2junit
          key: ${{ runner.os }}-cargo-cargo2junit-${{ env.CARGO_CARGO2JUNIT_VERSION }}
      - name: Cache crates
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-crates-${{ hashFiles('./Cargo.lock') }}
      - name: Setup Environment
        run: eng/ci/setup.sh
      - name: Setup Test Environment
        run: eng/ci/setup-test.sh
      - name: Run Tests
        env:
          COVERALLS_KEY: ${{ secrets.COVERALLS_KEY }}
        run: eng/ci/test-run.sh
      - name: Test Report
        if: always()
        run: eng/ci/test-report.sh
      - name: Publish Test Report
        uses: docker://ghcr.io/enricomi/publish-unit-test-result-action:v1.6
        if: always()
        with:
          check_name: test-results
          github_token: ${{ secrets.GITHUB_TOKEN }}
          files: test-results.xml
